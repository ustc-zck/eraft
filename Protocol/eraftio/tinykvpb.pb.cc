// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tinykvpb.proto

#include "tinykvpb.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace tinykvpb {
}  // namespace tinykvpb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_tinykvpb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tinykvpb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tinykvpb_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tinykvpb_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_tinykvpb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016tinykvpb.proto\022\010tinykvpb\032\rkvrpcpb.prot"
  "o\032\023raft_serverpb.proto\032\020raft_cmdpb.proto"
  "\032\021coprocessor.proto\032\024gogoproto/gogo.prot"
  "o2\334\010\n\006TinyKv\0224\n\005KvGet\022\023.kvrpcpb.GetReque"
  "st\032\024.kvrpcpb.GetResponse\"\000\0227\n\006KvScan\022\024.k"
  "vrpcpb.ScanRequest\032\025.kvrpcpb.ScanRespons"
  "e\"\000\022C\n\nKvPrewrite\022\030.kvrpcpb.PrewriteRequ"
  "est\032\031.kvrpcpb.PrewriteResponse\"\000\022=\n\010KvCo"
  "mmit\022\026.kvrpcpb.CommitRequest\032\027.kvrpcpb.C"
  "ommitResponse\"\000\022U\n\020KvCheckTxnStatus\022\036.kv"
  "rpcpb.CheckTxnStatusRequest\032\037.kvrpcpb.Ch"
  "eckTxnStatusResponse\"\000\022R\n\017KvBatchRollbac"
  "k\022\035.kvrpcpb.BatchRollbackRequest\032\036.kvrpc"
  "pb.BatchRollbackResponse\"\000\022L\n\rKvResolveL"
  "ock\022\033.kvrpcpb.ResolveLockRequest\032\034.kvrpc"
  "pb.ResolveLockResponse\"\000\022Y\n\016TransferLead"
  "er\022!.raft_cmdpb.TransferLeaderRequest\032\"."
  "raft_cmdpb.TransferLeaderResponse\"\000\022Q\n\016P"
  "eerConfChange\022\035.raft_cmdpb.ChangePeerReq"
  "uest\032\036.raft_cmdpb.ChangePeerResponse\"\000\022;"
  "\n\006RawGet\022\026.kvrpcpb.RawGetRequest\032\027.kvrpc"
  "pb.RawGetResponse\"\000\022;\n\006RawPut\022\026.kvrpcpb."
  "RawPutRequest\032\027.kvrpcpb.RawPutResponse\"\000"
  "\022D\n\tRawDelete\022\031.kvrpcpb.RawDeleteRequest"
  "\032\032.kvrpcpb.RawDeleteResponse\"\000\022>\n\007RawSca"
  "n\022\027.kvrpcpb.RawScanRequest\032\030.kvrpcpb.Raw"
  "ScanResponse\"\000\0229\n\004Raft\022\032.raft_serverpb.R"
  "aftMessage\032\023.raft_serverpb.Done\"\000\022\?\n\010Sna"
  "pshot\022\034.raft_serverpb.SnapshotChunk\032\023.ra"
  "ft_serverpb.Done\"\000\022<\n\013Coprocessor\022\024.copr"
  "ocessor.Request\032\025.coprocessor.Response\"\000"
  "B\014\340\342\036\001\310\342\036\001\320\342\036\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tinykvpb_2eproto_deps[5] = {
  &::descriptor_table_coprocessor_2eproto,
  &::descriptor_table_gogoproto_2fgogo_2eproto,
  &::descriptor_table_kvrpcpb_2eproto,
  &::descriptor_table_raft_5fcmdpb_2eproto,
  &::descriptor_table_raft_5fserverpb_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tinykvpb_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tinykvpb_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tinykvpb_2eproto = {
  false, false, descriptor_table_protodef_tinykvpb_2eproto, "tinykvpb.proto", 1262,
  &descriptor_table_tinykvpb_2eproto_once, descriptor_table_tinykvpb_2eproto_sccs, descriptor_table_tinykvpb_2eproto_deps, 0, 5,
  schemas, file_default_instances, TableStruct_tinykvpb_2eproto::offsets,
  file_level_metadata_tinykvpb_2eproto, 0, file_level_enum_descriptors_tinykvpb_2eproto, file_level_service_descriptors_tinykvpb_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tinykvpb_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tinykvpb_2eproto)), true);
namespace tinykvpb {

// @@protoc_insertion_point(namespace_scope)
}  // namespace tinykvpb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
